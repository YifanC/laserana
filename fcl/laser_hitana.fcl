#include "services_microboone.fcl"
#include "caldata_microboone.fcl"
#include "calibration_microboone.fcl"

#include "hitfindermodules_microboone.fcl"
#include "cluster_microboone.fcl"
#include "cosmicremovalmodules.fcl"
#include "trackfindermodules_microboone.fcl"
#include "pandoramodules_microboone.fcl"
#include "wirecellmodules_microboone.fcl"

#include "reco_uboone_data_minimal.fcl"
#include "database_standard.fcl"

#include "merger.fcl"
#include "laserreco.fcl"
#include "laserspotter.fcl"

process_name: LaserHitAna

services:
{
  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "Hit_Analysis_Hist.root" }
  @table::microboone_reco_minimal_services
  message: @local::standard_info
  MemoryTracker:           { ignoreTotal: 1 } #default is one
  channelstatusservice:    @local::microboone_channelstatus_service          
                           @table::microboone_services_reco
}

services.DetectorClocksService.InheritClockConfig: false
#services.DatabaseUtil.ShouldConnect: true
services.DetPedestalService.DetPedestalRetrievalAlg.UseDB: true

# source is the swizzled laser files
source:
{
  module_type: RootInput
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "LaserHit-%04r-%04s.root"
   # sam_ignore:  true
   dataTier:    "reconstructed-2d"
   outputCommands: ["keep *_*_*_*",  "drop raw::RawDigits_*_*_*", "drop raw::OpDetWaveforms_*_*_*", "drop raw::BeamInfo_*_*_*"]
   compressionLevel: 1
 }
}

physics: { 
    producers: {
        digitfilter:                 @local::microboone_rawdigitfilter
	    LaserDataMerger:    @local::LaserDataMerger

        gaushit:             @local::microboone_gaushitfinder
	    caldat:                     @local::microboone_calroi

        LaserReco:
        {
            module_type:         "LaserReco"

            GenerateWireMap:         false
            UseROI:                  false
            HitBoxSize:              25       # cm

            MinAllowedChannelStatus: 4

            LaserRecoModuleLabel:       "daq"
            LaserDataMergerModuleLabel: "LaserDataMerger"
            LaserBeamInstanceLabel:     "LaserBeam"

             # High amplitude threshold for high signal exceptions for all planes
             HighAmplThreshold:       1000

             # U-Plane hit thresholds
             UHitPeakThreshold:      -25.0
             UAmplitudeToWidthRatio:  1
             UHitWidthThreshold:      10
             # V-Plane hit thresholds
             VHitPeakThreshold:       10.0
             VAmplitudeToWidthRatio:  1.0
             VAmplitudeToRMSRatio:    2.0
             VHitWidthThreshold:      12
             VRMSThreshold:           4

             # Y-Plane hit thresholds
             YHitPeakThreshold:       10.0
             YAmplitudeToWidthRatio:  1.5
             YHitWidthThreshold:      6
        }
    }

    filters: {
        LaserSpotter: {
            module_type:         "LaserSpotter"

            spotter:        @local::LaserSpotter.spotter
            hitfinder:      @local::LaserSpotter.hitfinder
            io:
            {
                LaserRecoModuleLabel:       "daq"
                LaserDataMergerModuleLabel: "LaserDataMerger"
                LaserBeamInstanceLabel:     "LaserBeam"
            }
        }
    }

    reco: [ LaserDataMerger,  LaserReco ]
    
    stream1:  [ out1 ]
    
    trigger_paths: [reco]

    # end_paths: [ p1 ]
}


# physics.producers.caldat.Threshold: [3,1,1]
physics.producers.gaushit.CalDataModuleLabel:                   "caldat"


